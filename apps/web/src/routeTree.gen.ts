/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as Manual_entryRouteImport } from './routes/manual_entry'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as Ai_assistant_entryRouteImport } from './routes/ai_assistant_entry'
import { Route as IndexRouteImport } from './routes/index'
import { Route as EditIdRouteImport } from './routes/edit/$id'

const Manual_entryRoute = Manual_entryRouteImport.update({
  id: '/manual_entry',
  path: '/manual_entry',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const Ai_assistant_entryRoute = Ai_assistant_entryRouteImport.update({
  id: '/ai_assistant_entry',
  path: '/ai_assistant_entry',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const EditIdRoute = EditIdRouteImport.update({
  id: '/edit/$id',
  path: '/edit/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/ai_assistant_entry': typeof Ai_assistant_entryRoute
  '/dashboard': typeof DashboardRoute
  '/manual_entry': typeof Manual_entryRoute
  '/edit/$id': typeof EditIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/ai_assistant_entry': typeof Ai_assistant_entryRoute
  '/dashboard': typeof DashboardRoute
  '/manual_entry': typeof Manual_entryRoute
  '/edit/$id': typeof EditIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/ai_assistant_entry': typeof Ai_assistant_entryRoute
  '/dashboard': typeof DashboardRoute
  '/manual_entry': typeof Manual_entryRoute
  '/edit/$id': typeof EditIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/ai_assistant_entry'
    | '/dashboard'
    | '/manual_entry'
    | '/edit/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/ai_assistant_entry' | '/dashboard' | '/manual_entry' | '/edit/$id'
  id:
    | '__root__'
    | '/'
    | '/ai_assistant_entry'
    | '/dashboard'
    | '/manual_entry'
    | '/edit/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  Ai_assistant_entryRoute: typeof Ai_assistant_entryRoute
  DashboardRoute: typeof DashboardRoute
  Manual_entryRoute: typeof Manual_entryRoute
  EditIdRoute: typeof EditIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/manual_entry': {
      id: '/manual_entry'
      path: '/manual_entry'
      fullPath: '/manual_entry'
      preLoaderRoute: typeof Manual_entryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ai_assistant_entry': {
      id: '/ai_assistant_entry'
      path: '/ai_assistant_entry'
      fullPath: '/ai_assistant_entry'
      preLoaderRoute: typeof Ai_assistant_entryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/edit/$id': {
      id: '/edit/$id'
      path: '/edit/$id'
      fullPath: '/edit/$id'
      preLoaderRoute: typeof EditIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  Ai_assistant_entryRoute: Ai_assistant_entryRoute,
  DashboardRoute: DashboardRoute,
  Manual_entryRoute: Manual_entryRoute,
  EditIdRoute: EditIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
